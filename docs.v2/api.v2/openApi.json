{
  "openapi": "3.0.4",
  "info": {
    "title": "Digilean Public API",
    "version": "v2"
  },
  "paths": {
    "/v2/areas": {
      "get": {
        "tags": [
          "Areas"
        ],
        "operationId": "GetAreas",
        "parameters": [
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AreaPaginationResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AreaPaginationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaPaginationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaPaginationResult"
                }
              }
            }
          }
        }
      }
    },
    "/v2/areas/{areaId}": {
      "get": {
        "tags": [
          "Areas"
        ],
        "operationId": "GetAreaByAreaId",
        "parameters": [
          {
            "name": "areaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Area"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Area"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Area"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Area"
                }
              }
            }
          }
        }
      }
    },
    "/v2/boards": {
      "get": {
        "tags": [
          "Boards"
        ],
        "operationId": "GetBoards",
        "parameters": [
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/BoardPaginationResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BoardPaginationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardPaginationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardPaginationResult"
                }
              }
            }
          }
        }
      }
    },
    "/v2/boards/{boardId}": {
      "get": {
        "tags": [
          "Boards"
        ],
        "operationId": "GetBoardByBoardId",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          }
        }
      }
    },
    "/v2/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "operationId": "GetGroups",
        "parameters": [
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/GroupPaginationResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GroupPaginationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupPaginationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupPaginationResult"
                }
              }
            }
          }
        }
      }
    },
    "/v2/groups/{groupId}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "operationId": "GetGroupByGroupId",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        }
      }
    },
    "/v2/tasks/{taskId}/attachments": {
      "post": {
        "tags": [
          "TaskAttachments"
        ],
        "operationId": "CreateTaskAttachmentByTaskId",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          }
        }
      }
    },
    "/v2/tasks/{taskId}/attachments/{attachmentId}": {
      "delete": {
        "tags": [
          "TaskAttachments"
        ],
        "operationId": "DeleteTaskAttachmentByTaskIdAndAttachmentId",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v2/tasks/comments": {
      "get": {
        "tags": [
          "TaskComments"
        ],
        "operationId": "GetTaskComments",
        "parameters": [
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCommentPaginationResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCommentPaginationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCommentPaginationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCommentPaginationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskComments"
        ],
        "operationId": "CreateTaskComment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCommentCreate"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCommentCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCommentCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCommentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              }
            }
          }
        }
      }
    },
    "/v2/tasks/{taskId}/comments": {
      "get": {
        "tags": [
          "TaskComments"
        ],
        "operationId": "GetTaskCommentsByTaskId",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCommentPaginationResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCommentPaginationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCommentPaginationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCommentPaginationResult"
                }
              }
            }
          }
        }
      }
    },
    "/v2/tasks/comments/{taskCommentId}": {
      "get": {
        "tags": [
          "TaskComments"
        ],
        "operationId": "GetTaskCommentByTaskCommentId",
        "parameters": [
          {
            "name": "taskCommentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaskComments"
        ],
        "operationId": "DeleteTaskCommentByTaskCommentId",
        "parameters": [
          {
            "name": "taskCommentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v2/tasks/{taskId}/comments/{taskCommentId}": {
      "get": {
        "tags": [
          "TaskComments"
        ],
        "operationId": "GetTaskCommentByTaskIdAndTaskCommentId",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "taskCommentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaskComments"
        ],
        "operationId": "DeleteTaskCommentByTaskIdAndTaskCommentId",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "taskCommentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v2/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "GetTasks",
        "parameters": [
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPaginationResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPaginationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPaginationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPaginationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "CreateTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              }
            }
          }
        }
      }
    },
    "/v2/tasks/{taskId}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "GetTaskByTaskId",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tasks"
        ],
        "operationId": "UpdateTaskByTaskId",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "operationId": "SetTaskByTaskId",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigiLeanTask"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "operationId": "DeleteTaskByTaskId",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TaskDeleteMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v2/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetUsers",
        "parameters": [
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserPaginationResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPaginationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPaginationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPaginationResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "CreateUser",
        "parameters": [
          {
            "name": "allowRecovery",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/v2/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetUserByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Specifies OData search phrases. Numeric values must be enclosed in quotes (e.g., \"1234\"). This parameter is mutually exclusive with $filter. Each word is treated as a search key; a match with any key is considered successful. To search for keywords containing spaces, enclose the entire phrase in quotes (e.g., \"this is example\").",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData select expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "OData top (limit) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "OData skip (offset) expression",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "OData expand expression to include related entities (navigation properties) in the response.",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "OData count expression to include a count of the total number of items in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by expression",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "operationId": "UpdateUserByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "SetUserByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "DeleteUserByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Area": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AreaPaginationResult": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "@odata.count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Area"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "previewFileName": {
            "type": "string",
            "nullable": true
          },
          "hasPreview": {
            "type": "boolean"
          },
          "fileExtension": {
            "type": "string",
            "nullable": true
          },
          "eTag": {
            "type": "string",
            "nullable": true
          },
          "fileSizeInBytes": {
            "type": "integer",
            "format": "int64"
          },
          "fileSizeInKb": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "nullable": true
          },
          "createdByUser": {
            "type": "string",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedByUserId": {
            "type": "string",
            "nullable": true
          },
          "lastModifiedByUser": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "isImage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Board": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "boardType": {
            "$ref": "#/components/schemas/BoardType"
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMember": {
            "type": "boolean"
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DigiLeanTask"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoardPaginationResult": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "@odata.count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Board"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoardType": {
        "enum": [
          "Weekly",
          "Kanban",
          "SmartActionList",
          "Yearly"
        ],
        "type": "string"
      },
      "DigiLeanTask": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "responsibleUser": {
            "type": "string",
            "nullable": true
          },
          "responsibleUserId": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "boardId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "board": {
            "$ref": "#/components/schemas/Board"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModifiedByUserId": {
            "type": "string",
            "nullable": true
          },
          "lastModifiedByUser": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskComment"
            },
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/GroupType"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/Group"
          },
          "isSystemGroup": {
            "type": "boolean"
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "externalName": {
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroup"
            },
            "nullable": true
          },
          "boards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Board"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupPaginationResult": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "@odata.count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupType": {
        "enum": [
          "GENERAL",
          "BUSINESSUNIT",
          "PROJECT",
          "CUSTOMIZED"
        ],
        "type": "string"
      },
      "TaskComment": {
        "required": [
          "comment",
          "commentedBy",
          "task"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "commentedBy": {
            "type": "string",
            "nullable": true
          },
          "commentedByUserId": {
            "type": "string",
            "nullable": true
          },
          "commentDate": {
            "type": "string",
            "format": "date-time"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "task": {
            "$ref": "#/components/schemas/DigiLeanTask"
          },
          "commentedByUserDisplayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskCommentCreate": {
        "required": [
          "comment",
          "taskId"
        ],
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskCommentPaginationResult": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "@odata.count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskComment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskCreate": {
        "required": [
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "responsibleUserId": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "boardId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskDeleteMode": {
        "enum": [
          "SINGLE",
          "CLONES",
          "RECCURING",
          "ALL"
        ],
        "type": "string"
      },
      "TaskPaginationResult": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "@odata.count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DigiLeanTask"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskStatus": {
        "enum": [
          "NotStarted",
          "Completed",
          "Blocked"
        ],
        "type": "string"
      },
      "TaskUpdate": {
        "required": [
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "responsibleUserId": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "boardId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskUpdatePartial": {
        "required": [
          "model"
        ],
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/TaskUpdate"
          },
          "providedProperties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/UserType"
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserCreate": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "type",
          "userName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/UserType"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserGroup": {
        "required": [
          "group",
          "groupId",
          "role",
          "user",
          "userId"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/UserGroupRole"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "UserGroupRole": {
        "enum": [
          "Member",
          "Viewer",
          "Owner"
        ],
        "type": "string"
      },
      "UserPaginationResult": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "@odata.count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserType": {
        "enum": [
          "NORMAL",
          "MOBILE",
          "SCREEN"
        ],
        "type": "string"
      },
      "UserUpdate": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "type",
          "userName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/UserType"
          },
          "displayName": {
            "maxLength": 6,
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserUpdatePartial": {
        "required": [
          "model"
        ],
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/UserUpdate"
          },
          "providedProperties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "ClientCredentials": {
        "type": "oauth2",
        "description": "Client Credentials flow. Authorization header with Bearer token",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth-test.digilean.tools/connect/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "ClientCredentials": [ ]
    }
  ]
}